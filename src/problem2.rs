//! https://projecteuler.net/problem=2
//! 
//! Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//! 
//! 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//! 
//! By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

pub struct Problem;

impl Problem {
    pub fn exec() -> i64 {
        Problem::add_fib_even(1, 2, 0, 4000000)
    }

    fn add_fib_even(x: i64, y: i64, mut sum: i64, limit: i64) ->  i64 {
        println!("x = {}, y = {}, sum = {}, limit = {}", x, y, sum, limit);
        if x < limit {
            sum = if y % 2 == 0 { sum + y } else { sum };
            Problem::add_fib_even(y, x + y, sum, limit)
        } else {
            sum
        }
    }
}